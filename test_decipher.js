// anotherFile.js
const { decryptor } = require('./index');

const publicKey = `-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzygjcZO4hcKJVIwhMWfl
kaWZVbAsN5Ne2m1Gp8IT4LI2e/4FuKWbvuEkNK6IjJHg8yDdOrFqasUOYnmuzgwf
XjiKgddGpM5Yk3X+zDJZ5WuO0dUcxgI8qzUQEET7I6UD1ze8Ti1tu2gbbMtaO4Ii
u2KddWvlf7I2Tfq2BiHhkVEQ+nwyMG8PI0sRSoZiBixi9Y3rzc0OgPlvwW2zJN/e
GTvKQFVRpxQb3MBQFAqYdgj/ApFwcaxVVaZO23Tgb6CZV0SDCZ4+qxvqoX1ng0zN
jF4sQYcZlOyN1S46Zf7NNPuzDZrUE3y5pMPU/5QN96WcwF6XmZiFUWRQz/RBb9dQ
bQIDAQAB
-----END PUBLIC KEY-----`.replace(/\\n/g, '\n');;


const response =
    {
        "data": {
            "encode": 5,
            "data": "",
            "key": "var _0xc23e=[\"\",\"split\",\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ+/\",\"slice\",\"indexOf\",\"\",\"\",\".\",\"pow\",\"reduce\",\"reverse\",\"0\"];function _0xe47c(d,e,f){var g=_0xc23e[2][_0xc23e[1]](_0xc23e[0]);var h=g[_0xc23e[3]](0,e);var i=g[_0xc23e[3]](0,f);var j=d[_0xc23e[1]](_0xc23e[0])[_0xc23e[10]]()[_0xc23e[9]](function(a,b,c){if(h[_0xc23e[4]](b)!==-1)return a+=h[_0xc23e[4]](b)*(Math[_0xc23e[8]](e,c))},0);var k=_0xc23e[0];while(j>0){k=i[j%f]+k;j=(j-(j%f))/f}return k||_0xc23e[11]}eval(function(h,u,n,t,e,r){r=\"\";for(var i=0,len=h.length;i<len;i++){var s=\"\";while(h[i]!==n[e]){s+=h[i];i++}for(var j=0;j<n.length;j++)s=s.replace(new RegExp(n[j],\"g\"),j);r+=String.fromCharCode(_0xe47c(s,e,10)-t)}return decodeURIComponent(escape(r))}(\"XYvWVvWXvVvWWXVvWvYVvWWWVXYvWVWWXVXYYYVvYYvVvYvWVvYYXVvYvvVvYvYVvYYWVvYvXVvYYWVvYvvVvYXYVvYYvVvYXvVvYYXVvYvWVvYYYVvYYWVvYvXVvYvXVvYXvVvYvXVvYYWVvYWvVWYXVvWYXVvYvvVvYYWVvWYXVXYYYVWYXV\",53,\"YvXWVlKps\",16,4,16))",
            "id": "p172543635819270366963"
        },
        "extra": [],
        "msg": "获取成功",
        "status": 1
    }
// 从response获取data中的data作为需要解密的数据
const encryptedData  = response.data.data

const key  = response.data.key
// 调用 decryptData 方法进行解密
const decryptedData = decryptor(encryptedData, key);

// 对解密后的数据进行处理
console.log(decryptedData);
// 或者执行其他操作,如解析JSON等
